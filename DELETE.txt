Will be deleted at the end.

package.json & package-lock.json:

GPT suggested that these 2 files are an essential part of any Node.js project.
 - package.json lists the project's dependencies and metadata.
 - package-lock.json locks the exact versions to ensure consistency across different environments.

Run " npm install " to install dependencies, 
make sure MongoDB is running, then do " npm start ".



Here is a to-do list, so we don't forget anything:

DONE: 
 - Server activation
 - Model\Schema of collection
 - Load docs from csv to db (loadQuestion.js)
 - Write HTML (index.html)
 - Accepts answer and says if correct, only counts a question Answered if the answer was correct (maybe
    we should change that?)



TO-DO:
 - Write logic of the game - in a separate file
 -Points system, when the game ends
 - In HTML - change color of (levels, subjects) depend on their availability
 - Now coloring is written in script (HTML), maybe we should do it in CSS
 - CSS - optional
 - comments on all code - optional
 - Write note that explains the code (ReadMe) - Sara asked to do





  To-Do List / Task Breakdown (from ChatGPT) - will delete as we complete things


3. Build the Server-Side Logic (Node.js/Express)
 Set up a basic Express server.

 Create routes for:

 Getting available topics/difficulties

 Getting a random unanswered question by topic and difficulty

 Submitting an answer and updating the document's answered status

 Checking the user's score and mistake count

 Checking whether the game is over

4. Client-Side JavaScript Logic
 On topic/difficulty selection:

 Check if unanswered questions remain.

 If none: show a message to choose a different topic.

 If available: fetch and display a question with 4 answers.

 When user selects an answer:

 Check if itâ€™s correct

 Show a message (correct / incorrect)

 Update score and mistake count

 Update answered field in the DB

 Display current score

 If 4 mistakes: end the game and show score

 If all questions are answered: show end game message and score

5. Game Logic
 Track:

Number of correct answers (points)

Number of incorrect answers (mistakes)

 Stop the game after:

4 mistakes, or

All questions are answered (answered = Y for all)

6. Final Preparation for Submission
 Write a brief document explaining how the app works.

 Add names of both team members on the cover page.

 Zip the entire project folder (code, CSV, explanation).

 Upload it to the course system (Lamada) before August 15, 2025.

